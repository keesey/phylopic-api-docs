openapi: 3.0.1
info:
  title: PhyloPic API
  version: 2.0.0-alpha
components:
  headers:
    Accept-Ranges:
      description: The units acceptable for range requests. Always 'items'.
      example: items
      schema:
        pattern: '^items$'
        type: string
    Content-Range:
      description: |
        The range of embedded items, in the format 'items {start}-{end}/{total}'.
      example: items 0-9/88
      schema:
        pattern: '^items \d+-\d+/\d+$'
        type: string
    Content-Type:
      description: The MIME type for the payload, including API version. Always `application/vnd.phylopic.v2+json`.
      example: application/vnd.phylopic.v2+json
      schema:
        format: mimetype
        type: string
    Location:
      description: The URL for the resource.
      schema:
        format: url
        type: string
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      description: The MIME type for the response, including API version. Must include `application/vnd.phylopic.v2+json`.
      schema:
        format: mimetype
        type: string
      example: application/vnd.phylopic.v2+json
    Authentication:
      name: Authentication
      in: header
      required: true
      description: Authentication for using this API.
      schema:
        type: string
    Content-Type:
      name: Content-Type
      in: header
      required: true
      description: The MIME type for the payload, including API version. Must be `application/vnd.phylopic.v2+json`.
      schema:
        format: mimetype
        type: string
      example: application/vnd.phylopic.v2+json
    Range:
      name: Range
      in: header
      required: true
      description: |
        A range of the items to read, inclusive.

        Example: `items=0-9`
      schema:
        pattern: '^items=\d+-\d+$'
        type: string
      example: items=0-9
    embed-Image:
      name: embed
      in: query
      description: |
        A space-separated list of related entities to embed. May include:
        - `general_node`
        - `specific_node`
        - `submitter`

        If omitted, no entities will be embedded.
      schema:
        pattern: '^((general_node|specific_node|submitter) )*(general_node|specific_node|submitter)$'
        type: string
    embed-Node:
      name: embed
      in: query
      description: |
        A space-separated list of related entities to embed. May include:
        - `parent`
        - `submitter`

        If omitted, no entities will be embedded.
      schema:
        pattern: '^((general_node|specific_node|submitter) )*(general_node|specific_node|submitter)$'
        type: string
    uuid-Entity:
      name: uuid
      in: path
      required: true
      description: The UUID of the entity.
      schema:
        format: uuid
        type: string
  responses:
    '202':
      description: The request has been accepted but is still being processed.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            type: object
            required:
              - _links
              - uuid
            properties:
              _links:
                type: object
                required:
                  - self
                properties:
                  self:
                    $ref: '#/components/schemas/Link'
              uuid:
                format: uuid
                type: string
    '204':
      description: The request completed successfuly. No further information is provided.
    '302':
      description: The requested resource has been found.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Location:
          $ref: '#/components/headers/Location'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            type: object
            required:
              - _links
              - uuid
            properties:
              _links:
                type: object
                required:
                  - self
                properties:
                  self:
                    $ref: '#/components/schemas/Link'
              uuid:
                format: uuid
                type: string
    '307':
      description: The requested resource is available at another location, temporarily.
      headers:
        Location:
          $ref: '#/components/headers/Location'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            type: object
            required:
              - _links
            properties:
              _links:
                type: object
                required:
                  - equivalent
                properties:
                  equivalent:
                    $ref: '#/components/schemas/Link'
    '400':
      description: There is an error in the request.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            $ref: '#/components/schemas/Errors'
    '401':
      description: The user is not currently authenticated.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            $ref: '#/components/schemas/Errors'
    '403':
      description: The user does not have permission to perform this action.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            $ref: '#/components/schemas/Errors'
    '404':
      description: The resource cannot be found.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            $ref: '#/components/schemas/Errors'
    '410':
      description: The resource has been removed.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            $ref: '#/components/schemas/Errors'
    '416':
      description: The requested range is not satisfiable.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            $ref: '#/components/schemas/Errors'
    'list-Image':
      description: HAL JSON list of embedded image records.
      headers:
        Accept-Ranges:
          $ref: '#/components/headers/Accept-Ranges'
        Content-Range:
          $ref: '#/components/headers/Content-Range'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            type: object
            required:
              - _links
            properties:
              _embedded:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ImageResource'
              _links:
                type: object
                required:
                  - self
                properties:
                  self:
                    $ref: '#/components/schemas/Link'
    'list-Node':
      description: HAL JSON list of embedded node records.
      headers:
        Accept-Ranges:
          $ref: '#/components/headers/Accept-Ranges'
        Content-Range:
          $ref: '#/components/headers/Content-Range'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
      content:
        application/vnd.phylopic.v2+json:
          schema:
            type: object
            required:
              - _links
            properties:
              _embedded:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/NodeResource'
              _links:
                type: object
                required:
                  - self
                properties:
                  self:
                    $ref: '#/components/schemas/Link'
  schemas:
    Account:
      description: A user's account information.
      required:
        - _links
        - email
        - family_name
        - given_name
        - role
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            _links:
              type: object
              required:
                - self
                - submitted_image_set
                - submitted_name_set
              properties:
                submitted_image_set:
                  $ref: '#/components/schemas/Link'
                  readOnly: true
                submitted_node_set:
                  $ref: '#/components/schemas/Link'
                  readOnly: true
            email:
              format: email
              readOnly: true
              type: string
            family_name:
              readOnly: true
              type: string
              example: 'Linnaeus'
            given_name:
              readOnly: true
              type: string
              example: 'Carolus'
            role:
              pattern: '^(member|admin)$'
              readOnly: true
              type: string
              example: 'member'
    AccountResource:
      allOf:
        - $ref: '#/components/schemas/Account'
        - description: Resource for a user's account information. Currently no different from `Account`.
    Entity:
      description: Common properties for all entities.
      type: object
      required:
        - _links
        - created
        - modified
        - uuid
      properties:
        _links:
          type: object
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/Link'
              readOnly: true
        created:
          format: date-time
          readOnly: true
          type: string
        modified:
          format: date-time
          readOnly: true
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
          example: '123e4567-e89b-12d3-a456-426655440000'
    Errors:
      description: List of errors.
      type: array
      items:
        type: object
        required:
          - code
          - developerMessage
          - userMessage
        properties:
          code:
            format: int64
            type: integer
            example: 99
          developerMessage:
            type: string
            example: 'Failure at line 100 of file script.scr.'
          documentation:
            format: url
            type: string
            example: 'http://domain/path/help.html'
          field:
            type: string
            example: 'attribution'
          userMessage:
            type: string
            example: 'This is an error message legible to users.'
    Image:
      description: A submitted image.
      required:
        - _links
        - attribution
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          properties:
            attribution:
              type: string
              example: 'Charles Knight'
            _links:
              type: object
              required:
                - general_node
                - http://ogp.me/ns#image
                - icon_file
                - license
                - raster_files
                - self
                - specific_node
                - submitter
                - node_set
                - thumbnail_file
                - twitter:image
                - vector_file
              properties:
                general_node:
                  $ref: '#/components/schemas/Link'
                  nullable: true
                'http://ogp.me/ns#image':
                  $ref: '#/components/schemas/MediaLink'
                  readOnly: true
                icon_file:
                  $ref: '#/components/schemas/MediaLink'
                  readOnly: true
                license:
                  $ref: '#/components/schemas/Link'
                raster_files:
                  type: array
                  readOnly: true
                  items:
                    $ref: '#/components/schemas/MediaLink'
                specific_node:
                  $ref: '#/components/schemas/Link'
                submitter:
                  $ref: '#/components/schemas/Link'
                  readOnly: true
                node_set:
                  $ref: '#/components/schemas/Link'
                  readOnly: true
                thumbnail_file:
                  $ref: '#/components/schemas/MediaLink'
                  readOnly: true
                'twitter:image':
                  $ref: '#/components/schemas/MediaLink'
                  readOnly: true
                vector_file:
                  $ref: '#/components/schemas/MediaLink'
                  readOnly: true
                  nullable: true
    ImageResource:
      description: Resource for a submitted image.
      required:
        - _embedded
      allOf:
        - type: object
          properties:
            _embedded:
              type: object
              properties:
                general_node:
                  $ref: '#/components/schemas/Node'
                  nullable: true
                specific_node:
                  $ref: '#/components/schemas/Node'
                submitter:
                  $ref: '#/components/schemas/Account'
        - $ref: '#/components/schemas/Image'
    Link:
      description: A basic link.
      type: object
      properties:
        href:
          format: url
          type: string
          example: /path/123e4567-e89b-12d3-a456-426655440000
    MediaLink:
      description: A link to an image file.
      allOf:
        - $ref: '#/components/schemas/Link'
        - type: object
          properties:
            href:
              example: '/path/123e4567-e89b-12d3-a456-426655440000.img'
            sizes:
              pattern: '^\d+x\d+$'
              type: string
              example: 32x32
            type:
              format: mimetype
              type: string
              example: 'image/img'
    Node:
      description: A phylogenetic node, corresponding to a taxonomic unit.
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          required:
            - _links
            - names
            - root
          properties:
            _links:
              type: object
              required:
                - ancestor_image_set
                - child_set
                - descendant_image_set
                - external
                - parent
                - self
                - self_image_set
                - submitter
              properties:
                ancestor_image_set:
                  $ref: '#/components/schemas/Link'
                  nullable: true
                  readOnly: true
                child_set:
                  $ref: '#/components/schemas/Link'
                  nullable: true
                  readOnly: true
                descendant_image_set:
                  $ref: '#/components/schemas/Link'
                  nullable: true
                  readOnly: true
                external:
                  type: array
                  items:
                    $ref: '#/components/schemas/TitledLink'
                parent:
                  $ref: '#/components/schemas/Link'
                  nullable: true
                self_image_set:
                  $ref: '#/components/schemas/Link'
                  nullable: true
                  readOnly: true
                submitter:
                  $ref: '#/components/schemas/Link'
                  nullable: true
                  readOnly: true
            names:
              type: array
              items:
                type: array
                items:
                  type: object
                  required:
                    - class
                    - text
                  properties:
                    class:
                      format: '^(citation|comment|operator|rank|scientific|vernacular)$'
                      type: string
                      example: scientific
                    text:
                      format: '^\S+( \S+)*$'
                      type: string
                      example: Homo sapiens
            root:
              type: boolean
    NodeResource:
      description: A resource for a phylogenetic node.
      required:
        - _embedded
        - _links
        - names
        - root
      allOf:
        - type: object
          properties:
            _embedded:
              type: object
              properties:
                parent:
                  $ref: '#/components/schemas/Node'
                  nullable: true
                submitter:
                  $ref: '#/components/schemas/Account'
                  nullable: true
        - $ref: '#/components/schemas/Node'
    TitledLink:
      description: A link with a title, usually for an external resource.
      allOf:
        - $ref: '#/components/schemas/Link'
        - type: object
          properties:
            title:
              type: string
              example: 'Resource Name'
    UUIDList:
      description: An object storing a list of UUIDs.
      type: object
      required:
        - uuids
      properties:
        uuids:
          type: array
          items:
            format: uuid
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
paths:
  /:
    get:
      summary: API information and links to resources.
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '200':
          description: HAL JSON resource description for the API.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
          content:
            application/vnd.phylopic.v2+json:
              schema:
                type: object
                required:
                  _links
                  title
                  version
                properties:
                  _links:
                    type: object
                    required:
                      contact
                      documentation
                      resources
                      self
                    properties:
                      contact:
                        $ref: '#/components/schemas/TitledLink'
                      documentation:
                        $ref: '#/components/schemas/Link'
                      resources:
                        type: array
                        items:
                          $ref: '#/components/schemas/TitledLink'
                      self:
                        $ref: '#/components/schemas/Link'
                  title:
                    type: string
                    example: PhyloPic API
                  version:
                    pattern: '^\d+\.\d+\.\d+(-(alpha|beta|rc)(\.\d+)?)?'
                    type: string
                    example: 2.0.0-alpha
  /accounts/{uuid}:
    get:
      summary: Returns a specific user account.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/uuid-Entity'
      responses:
        '200':
          description: HAL JSON user account record.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
          content:
            application/vnd.phylopic.v2+json:
              schema:
                $ref: '#/components/schemas/AccountResource'
        '404':
          $ref: '#/components/responses/404'
        '410':
          $ref: '#/components/responses/410'
  /images:
    get:
      summary: Returns the location of the current set of all images.
      parameters:
        - $ref: '#/components/parameters/Accept'
      responses:
        '307':
          $ref: '#/components/responses/307'
    post:
      summary: Submits an image file for processing and addition.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Authentication'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attribution:
                  type: string
                  example: 'Charles Knight'
                file:
                  format: binary
                  type: string
                license:
                  format: url
                  type: string
                  example: 'https://creativecommons.org/publicdomain/zero/1.0/'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '303':
          description: The submission was already made.
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  /images/sets:
    post:
      summary: Creates or retrieves a set of images.
      requestBody:
        required: true
        content:
          application/vnd.phylopic.v2+json:
            schema:
              $ref: '#components/schemas/UUIDList'
      responses:
        '302':
          $ref: '#/components/responses/302'
        '400':
          $ref: '#/components/responses/400'
  /images/sets/{uuid}:
    get:
      summary: Returns a specific set of images.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/embed-Image'
        - name: created<
          in: query
          required: false
          description: Limits results to entries created on or before this time.
          schema:
            format: date-time
            type: string
        - name: created>
          in: query
          required: false
          description: Limits results to entries created on or after this time.
          schema:
            format: date-time
            type: string
        - name: license_components
          in: query
          required: false
          description: |
            Limits entries to those with or without certain license components.

            Components are represented as a space-separated list. May include:
            - `by` (Attribution)
            - `nc` (Noncommercial)
            - `sa` (Standalone)

            Any of these may be prepended by `-` to indicate that only images under licenses **without** that component should be returned.

            Examples:
            - `by`: only include images with licenses that require attribution.
            - `-by`: exclude all images with licenses that require attribution.
            - `-by -nc -sa`: only include images in the public domain (having none of the license components).
          schema:
            format: '^(\-?(by|nc|sa) )*(\-?(by|nc|sa))$'
            type: string
        - name: modified<
          in: query
          required: false
          description: Limits results to entries modified on or before this time.
          schema:
            format: date-time
            type: string
        - name: modified>
          in: query
          required: false
          description: Limits results to entries modified on or after this time.
          schema:
            format: date-time
            type: string
        - name: sort
          in: query
          required: false
          description: |
            A space-separated list of fields to sort by. May include:
            - `created`
            - `modified`

            Either of these may be prepended by `-` to indicate descending order. The default value is `-modified`.
          schema:
            pattern: '^(\-?(created|modified) )*(\-?(created|modified))$'
            type: string
      responses:
        '206':
          $ref: '#/components/responses/list-Image'
        '400':
          $ref: '#/components/responses/400'
        '416':
          $ref: '#/components/responses/416'
  /images/{uuid}:
    get:
      summary: Returns a specific image.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/uuid-Entity'
        - $ref: '#/components/parameters/embed-Image'
      responses:
        '200':
          description: HAL JSON image record.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
          content:
            application/vnd.phylopic.v2+json:
              schema:
                $ref: '#/components/schemas/ImageResource'
        '204':
          $ref: '#/components/responses/204'
        '404':
          $ref: '#/components/responses/404'
        '410':
          $ref: '#/components/responses/410'
    patch:
      summary: Updates a specific image.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Authentication'
        - $ref: '#/components/parameters/uuid-Entity'
      requestBody:
        required: true
        content:
          application/vnd.phylopic.v2+json:
            schema:
              $ref: '#/components/parameters/Image'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '410':
          $ref: '#/components/responses/410'
  /images/{uuid}/file:
    post:
      summary: Updates a specific image's file.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Authentication'
        - $ref: '#/components/parameters/uuid-Entity'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  format: binary
                  type: string
      responses:
        '202':
          $ref: '#/components/responses/202'
        '303':
          description: The file was already uploaded for another image.
          headers:
            Location:
              $ref: '#/components/headers/Location'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '410':
          $ref: '#/components/responses/410'
  /licenses:
    get:
      summary: |
        Return a list of all licenses that may be used for new submissions.

        Note that this does not include all licenses for all images.
      responses:
        '200':
          description: List of titled links to licenses.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
          content:
            application/vnd.phylopic.v2+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TitledLink'
  /nodes:
    get:
      summary: Returns a list of nodes.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/embed-Node'
        - name: created<
          in: query
          required: false
          description: Limits results to entries created on or before this time.
          schema:
            format: date-time
            type: string
        - name: created>
          in: query
          required: false
          description: Limits results to entries created on or after this time.
          schema:
            format: date-time
            type: string
        - name: modified<
          in: query
          required: false
          description: Limits results to entries modified on or before this time.
          schema:
            format: date-time
            type: string
        - name: modified>
          in: query
          required: false
          description: Limits results to entries modified on or after this time.
          schema:
            format: date-time
            type: string
        - name: search
          in: query
          required: false
          description: Limits entries to nodes with the search text in one of their names.
          schema:
            type: string
        - name: sort
          in: query
          required: false
          description: |
            A space-separated list of fields to sort by. May include:
            - `created`
            - `modified`

            Either of these be prepended by `-` to indicate descending order. The default value is `-modified`.
          schema:
            pattern: '^(\-?(created|modified) )*(\-?(created|modified))$'
            type: string
      responses:
        '206':
          description: HAL JSON list of embedded node records.
          headers:
            Accept-Ranges:
              $ref: '#/components/headers/Accept-Ranges'
            Content-Range:
              $ref: '#/components/headers/Content-Range'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
          content:
            application/vnd.phylopic.v2+json:
              schema:
                type: object
                required:
                  - _links
                properties:
                  _embedded:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/NodeResource'
                  _links:
                    type: object
                    required:
                      - self
                    properties:
                      self:
                        $ref: '#/components/schemas/Link'
        '400':
          $ref: '#/components/responses/400'
        '416':
          $ref: '#/components/responses/416'
  /nodes/sets:
    post:
      summary: Creates or retrieves a set of nodes.
      requestBody:
        required: true
        content:
          application/vnd.phylopic.v2+json:
            schema:
              $ref: '#/components/schemas/UUIDList'
      responses:
        '302':
          $ref: '#/components/responses/302'
        '400':
          $ref: '#/components/responses/400'
  /nodes/sets/{uuid}:
    get:
      summary: Returns a specific set of nodes.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/embed-Node'
        - name: sort
          in: query
          required: false
          description: |
            A space-separated list of fields to sort by. May include:
            - `created`
            - `modified`
            - `names`

            Any of these may be prepended by `-` to indicate descending order. The default value is `names`.
          schema:
            pattern: '^(\-?(created|modified|names) )*(\-?(created|modified|names))$'
            type: string
      responses:
        '206':
          $ref: '#/components/responses/list-Node'
        '400':
          $ref: '#/components/responses/400'
        '416':
          $ref: '#/components/responses/416'
  /nodes/{uuid}:
    get:
      summary: Returns a specific phylogenetic node.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/uuid-Entity'
        - $ref: '#/components/parameters/embed-Node'
      responses:
        '200':
          description: HAL JSON image record.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
          content:
            application/vnd.phylopic.v2+json:
              schema:
                $ref: '#/components/schemas/NodeResource'
        '404':
          $ref: '#/components/responses/404'
        '410':
          $ref: '#/components/responses/410'
    patch:
      summary: Updates a specific phylogenetic node.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Authentication'
        - $ref: '#/components/parameters/uuid-Entity'
      requestBody:
        required: true
        content:
          application/vnd.phylopic.v2+json:
            schema:
              $ref: '#/components/parameters/Node'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '410':
          $ref: '#/components/responses/410'
  /ping:
    get:
      description: For checking if the API is up.
      responses:
        '204':
          $ref: '#/components/responses/204'
